{
    "swagger": "2.0",
    "info": {
        "description": "The MSG provides tools for managing microservices.",
        "title": "Go Microservice Gateway",
        "contact": {},
        "version": "0.1.0"
    },
    "basePath": "/",
    "paths": {
        "/HealthCheck": {
            "get": {
                "description": "Check the status of the application",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Default"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.RespDto"
                        }
                    },
                    "502": {
                        "description": "Bad Gateway",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrRespDto"
                        }
                    }
                }
            }
        },
        "/api/Microservices": {
            "get": {
                "description": "Get all existing microservices",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Microservices"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.RespDto"
                        }
                    }
                }
            },
            "post": {
                "description": "Create a microservice",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Microservices"
                ],
                "parameters": [
                    {
                        "description": "Microservice dto object",
                        "name": "microservice",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.MsReqDto"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/dto.RespDto"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrRespDto"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrRespDto"
                        }
                    }
                }
            }
        },
        "/api/Microservices/{id}": {
            "get": {
                "description": "Get one microservice by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Microservices"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "Microservice ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.RespDto"
                        }
                    }
                }
            },
            "post": {
                "description": "Update a microservice by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Microservices"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "Microservice ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Microservice dto object",
                        "name": "microservice",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.MsReqDto"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.RespDto"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a microservice by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Microservices"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "Microservice ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        }
    },
    "definitions": {
        "dto.ErrRespDto": {
            "type": "object",
            "properties": {
                "errors": {
                    "description": "TODO: generic field..."
                },
                "message": {
                    "type": "string"
                },
                "success": {
                    "type": "boolean"
                }
            }
        },
        "dto.MsReqDto": {
            "type": "object",
            "required": [
                "name"
            ],
            "properties": {
                "description": {
                    "type": "string"
                },
                "name": {
                    "description": "TODO: unique name validator...",
                    "type": "string",
                    "maxLength": 255,
                    "minLength": 1
                }
            }
        },
        "dto.RespDto": {
            "type": "object",
            "properties": {
                "data": {
                    "description": "TODO: generic field..."
                },
                "message": {
                    "type": "string"
                },
                "success": {
                    "type": "boolean"
                }
            }
        }
    }
}